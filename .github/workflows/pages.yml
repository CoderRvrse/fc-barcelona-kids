name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: dist
    steps:
      - uses: actions/checkout@v4

      - name: Syntax check all JS (node --check)
        run: |
          set -e
          shopt -s globstar nullglob
          for f in **/*.js; do
            echo "checking $f"; node --check "$f";
          done

      - name: Detect package manager lockfile
        id: detect_lock
        run: |
          echo "npm_lock=$(ls -1 **/package-lock.json 2>/dev/null | wc -l)" >> $GITHUB_OUTPUT
          echo "yarn_lock=$(ls -1 **/yarn.lock 2>/dev/null | wc -l)"       >> $GITHUB_OUTPUT
          echo "pnpm_lock=$(ls -1 **/pnpm-lock.yaml 2>/dev/null | wc -l)"  >> $GITHUB_OUTPUT

      - name: Set mode (build vs static)
        id: mode
        run: |
          total_locks=$(( ${{ steps.detect_lock.outputs.npm_lock }} + ${{ steps.detect_lock.outputs.yarn_lock }} + ${{ steps.detect_lock.outputs.pnpm_lock }} ))
          if [ "$total_locks" -gt 0 ]; then echo "mode=build" >> $GITHUB_OUTPUT; else echo "mode=static" >> $GITHUB_OUTPUT; fi

      # ---------- BUILD PATH ----------
      - name: Setup Node
        if: ${{ steps.mode.outputs.mode == 'build' }}
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        if: ${{ steps.mode.outputs.mode == 'build' }}
        run: |
          if [ -f package-lock.json ]; then npm ci;
          elif [ -f yarn.lock ]; then corepack enable && yarn install --frozen-lockfile;
          elif [ -f pnpm-lock.yaml ]; then corepack enable && pnpm install --frozen-lockfile;
          fi

      - name: Build site
        if: ${{ steps.mode.outputs.mode == 'build' }}
        run: |
          if npm run | grep -q " build"; then npm run build;
          elif command -v yarn >/dev/null && yarn run | grep -q " build"; then yarn build;
          elif command -v pnpm >/dev/null && pnpm run | grep -q " build"; then pnpm build;
          else echo "No build script found; failing in build mode." && exit 1; fi

      - name: Upload artifact (build)
        if: ${{ steps.mode.outputs.mode == 'build' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.BUILD_DIR }}

      # ---------- STATIC PATH ----------
      - name: Upload artifact (static)
        if: ${{ steps.mode.outputs.mode == 'static' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      page_url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v5
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  smoke:
    name: Smoke test live site
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Probe key endpoints
        run: |
          set -euo pipefail
          URL="${{ needs.deploy.outputs.page_url }}"
          ROOT="${URL%/}"
          echo "Testing $ROOT"

          # 1) Home resolves and contains the base href (GH Pages subpath safety)
          curl -fsSL "$ROOT/" | tee /tmp/index.html | grep -q '<base href="/fc-barcelona-kids/">'

          # 2) Service worker reachable
          curl -I -s "$ROOT/sw.js" | grep -qE 'HTTP/.* 200'

          # 3) Offline page present
          curl -fsSL "$ROOT/offline.html" | grep -qi 'offline'

          # 4) SEO files
          curl -fsSL "$ROOT/robots.txt" | grep -q 'Sitemap: https://coderrvse.github.io/fc-barcelona-kids/sitemap.xml'
          curl -fsSL "$ROOT/sitemap.xml" | grep -q '<urlset'

          # 5) Soccer ball asset must be served
          curl -fsSL "$ROOT/assets/soccer-ball.svg" | head -n1 | grep -q "<svg"