name: Auto Regression Guard

on:
  workflow_run:
    workflows: ["Deploy to GitHub Pages"]
    types: [completed]

# default: minimal read; we escalate per-job
permissions:
  contents: read

concurrency:
  group: auto-regression-${{ github.event.workflow_run.id }}
  cancel-in-progress: true

jobs:
  # ✅ If deploy succeeded, this workflow passes quickly (no noise).
  noop_success:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Upstream deploy succeeded — nothing to do
        run: |
          echo "Deploy run ${{ github.event.workflow_run.id }} concluded: ${{ github.event.workflow_run.conclusion }}"

  # ❌ Only run the guard when deploy did NOT succeed
  on_failure:
    if: ${{ github.event.workflow_run.conclusion != 'success' }}
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
      pull-requests: write
    steps:
      - name: Dump event payload (debug)
        run: |
          echo '${{ toJson(github.event.workflow_run) }}' > event.json
          jq . event.json || cat event.json

      - name: Upload debug payload
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: auto-regression-debug-${{ github.event.workflow_run.id }}
          path: event.json
          retention-days: 7

      - name: Open regression issue
        uses: actions/github-script@v7
        with:
          script: |
            const run = context.payload.workflow_run;
            await github.rest.issues.create({
              owner: context.repo.owner, repo: context.repo.repo,
              title: `Regression: ${run.name} #${run.id} failed`,
              body: `**Conclusion:** ${run.conclusion}
**Branch:** ${run.head_branch}
**Commit:** ${run.head_sha}
**Actor:** @${run.actor.login}
**Run URL:** ${run.html_url}`,
              labels: ['regression','ci']
            });

      # Best-effort revert branch & PR (never fail job)
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configure bot identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Try to revert failing commit (best-effort)
        continue-on-error: true
        run: |
          set -e
          BR="ci/revert-${{ github.event.workflow_run.id }}"
          git checkout -b "$BR"
          git revert --no-edit "${{ github.event.workflow_run.head_sha }}" || echo "Nothing to revert"
          if ! git diff --quiet origin/main...HEAD; then
            git push -u origin "$BR" || true
          else
            echo "No changes to push"
          fi

      - name: Open revert PR (best-effort)
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const head = `ci/revert-${context.payload.workflow_run.id}`;
            try {
              await github.rest.pulls.create({
                owner: context.repo.owner, repo: context.repo.repo,
                head, base: 'main',
                title: `chore(ci): revert ${context.payload.workflow_run.head_sha.substring(0,7)} (auto)`,
                body: 'Auto-opened when Deploy pipeline failed.'
              });
            } catch (e) {
              core.warning(`PR open skipped: ${e.message}`);
            }

      - name: Mark handled
        run: echo "failure handled"
